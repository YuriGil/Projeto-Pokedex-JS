----------------- JAVASCRIPT CONTENDO HTML PRINCIPAL DA PAGINA INICIAL DA POKEDEX -------------------
const loadMoreButton = document.getElementById("loadMoreButton");

const maxRecords = 151;
const limit = 5;
let offset = 0;

function loadPokemonItens(offset, limit) {
  pokeApi.getPokemons(offset, limit)
  
  .then((pokemons = []) => {
    const newHtml = pokemons
    .map(
      (pokemon) =>
        `
      <li class="pokemon ${pokemon.type}">
    <span class="number">#${pokemon.number}</span>
    <span class="name">${pokemon.name}</span>
    
    <div class="detail">
        <ol class="types">
        ${pokemon.types
          .map((type) => `<li class="type ${type}" >${type}</li>`)
          .join("")}
        </ol>
        <img src="${pokemon.photo}" alt="${pokemon.name}">
    </div>
</li>

    `
      )
      .join("");
    pokemonList.innerHTML += newHtml;
  });
}


/*Botão relacionadio a paginação*/
loadPokemonItens(offset, limit);

loadMoreButton.addEventListener("click", () => {
  offset += limit;
  const qtdRecordWithNextPage = offset + limit
//se a pagina atingir o numero pre estabelecido retira o botão para continaur carregando
  if(qtdRecordWithNextPage >= maxRecords) {
    const newLimit = maxRecords - offset
    loadPokemonItens(offset, newLimit)
  
    loadMoreButton.parentElement.removeChild(loadMoreButton)
  }else{
    loadPokemonItens(offset, limit);
  }
});

async function searchPokemon() {
  const pokemonName = document.getElementById('pokemon-name').value.toLowerCase();
  const apiUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonName}`;

  try {
      const response = await fetch(apiUrl);
      if (!response.ok) {
          throw new Error('Pokémon não encontrado');
      }
      
      const pokemonData = await response.json();
      
      // Chamar a função preexistente para exibir os detalhes do Pokémon
      loadPokemonDetailsInNewWindow(pokemonData.id);
  } catch (error) {
      alert(error.message);
  }
}

------------ JAVASCRIPT CONTENDO HTML DA PAGINAÇÃO DA POKEDEX -------------


// Função para carregar os detalhes do Pokémon em uma nova janela
function loadPokemonDetailsInNewWindow(pokemonId) {
  const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}`;
  fetch(url)
    .then((response) => response.json())
    .then(convertPokeApiDetailToPokemon)
    .then((pokemon) => {
      const detailsPage = `

<div class="container">
  <div class="pokedex-details">
    <div class="header-details ${pokemon.type}">
      <button class="back title" id="backButton">&lArr; PokeDex </button>
      <img src="${pokemon.photo}" alt="${pokemon.name}">
      <span class="number"># ${pokemon.number}</span>
    </div>

    <div class="pokemon-info">
      <h1 class="name-details">${pokemon.name}</h1>
      <ol class="types-details">
        ${pokemon.types
          .map((type) => `<li class="type-details ${type}" >${type}</li>`)
          .join("")}
      </ol>
    </div>
    <div class="poke-details">
      <span class="height">Height: ${pokemon.height}</span>
      <span class="weight">Weight: ${pokemon.weight}</span>
    </div>

    <div class="poke-details">
      <p>Base Experience: ${pokemon.base_experience}</p>
      <h3>Abilities</h3>
      <ul>
        ${pokemon.abilities
          .map(
            (abilities) => `<li class="type ${abilities}">${abilities}</li>`
          )
          .join("")}
      </ul>
    </div>

    
    <div class="baseStatsContainer">
    <h2>Base Stats</h2>

    <div class="statsNumber">
    <div class="statsName">
    ${pokemon.statsName
      .map(
        (statsName) => `<div class="type ${statsName}">${statsName}</div>`
      )
      .join("")}
      </div>
      ${pokemon.statsNumber
        .map((statsNumber) => {
          const percentage = (statsNumber / 100) * 100;
          return `<div class="progress-bar" style="width: ${percentage}%;"><span>${statsNumber}</span></div>`;
        })
        .join("")}
    </div>
  </div>

`;

      // lnkar o botão de voltar
      document.body.innerHTML = detailsPage;

      document.getElementById("backButton").addEventListener("click", () => {
        location.reload();
      });
    });
}

// Adiciona um event listener a cada item da lista de Pokémon
document.addEventListener("DOMContentLoaded", () => {
  const pokemonList = document.getElementById("pokemonList");
  if (pokemonList) {
    pokemonList.addEventListener("click", (event) => {
      const pokemonItem = event.target.closest("li.pokemon");
      if (pokemonItem) {
        const pokemonId = pokemonItem
          .querySelector(".number")
          .textContent.replace("#", "");
        loadPokemonDetailsInNewWindow(pokemonId);
      }
    });
  }
});

--------- ARQUIVO BASE JAVASCRIPT DE COMUNICAÇÃO E UTILIZAÇÃO DE API --------------

const pokeApi = {};

function convertPokeApiDetailToPokemon(pokeDetail) {
  const pokemon = new Pokemon()
  pokemon.number = pokeDetail.id
  pokemon.name = pokeDetail.name
  pokemon.height = pokeDetail.height
  pokemon.weight = pokeDetail.weight
  pokemon.base_experience = pokeDetail.base_experience

  const types = pokeDetail.types.map((typeSlot) => typeSlot.type.name)
  const [type] = types
  
  pokemon.types = types
  pokemon.type = type

  const abilities = pokeDetail.abilities.map((ability) => ability.ability.name)
  pokemon.abilities = abilities

  const statsName = pokeDetail.stats.map((stat) => stat.stat.name);
  pokemon.statsName = statsName
  
  const statsNumber = pokeDetail.stats.map((stat) =>stat.base_stat);
  pokemon.statsNumber = statsNumber
  
  pokemon.photo = pokeDetail.sprites.other.showdown.front_default
  
  return pokemon
}

pokeApi.getPokemonDetail = (pokemon) => {
  return fetch(pokemon.url)
  .then((response) => response.json())
  .then(convertPokeApiDetailToPokemon)
}

pokeApi.getPokemons = (offset = 0, limit = 5) => {
  const url = `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`;
  return fetch(url)
    .then((response) => response.json())
    .then((jsonbody) => jsonbody.results)
    .then((pokemons) => pokemons.map(pokeApi.getPokemonDetail))
    .then((detailRequests) => Promise.all(detailRequests))
    .then((pokemonsDetails) => pokemonsDetails)
    .catch((error) => console.error(error))
    
}
